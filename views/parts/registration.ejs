<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Registration Page</title>
    <link rel="stylesheet" href="../css/reg_login.css">
</head>
<body>
    <h1>Register</h1>
    <!--форму оформить по центру в милом контейнере
    //внизу сделать две ссылки: вход и главная-->
    
    <form class="form-signin" role="form" method="POST" action="/auth/register">
        <input type="text" id="fullName" name="fullName" class="form-control" placeholder="Full Name" required autofocus><br>
        <input type="password" id="password" name="password" class="form-control" placeholder="Password" required><br>
        <input type="email" id="email" name="email" class="form-control" placeholder="Email@mail.com" required><br>
        <div class = "subm-btn"><input type="submit" value="Register" class="button-69" role="button"></div>
    </form>
    <p class="and-line">and</p>
    <div class = "back-btn"> <a href="/"><input type="button" class="button-70" role="button" value="Back to the main page"></a></div>

    <script>
    function postform() {
        const form = document.querySelector('form');
        form.addEventListener('submit', (event) => {
            const fullName = document.querySelector('#fullName').value;
            const password = document.querySelector('#password').value;
            const email = document.querySelector('#email').value;
            
            if (!fullName || !password || !email) {
                event.preventDefault();
                alert('Please fill out all fields.');
                return;
            }
            
            const formData = {
                fullName: fullName,
                password: password,
                email: email
            };
  
            fetch('/auth/register', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(formData) })
            .then(response => {
            if (response.ok) { return response.text();
            } else { return Promise.reject(response); }})
            .then(jwtToken => {
            const expiryDate = new Date(Date.now() + 24 * 60 * 60 * 1000);
            document.cookie = 'jwtToken=' + jwtToken + '; path=/; expires=' + expiryDate.toUTCString() + '; SameSite=Lax; Secure'; })
            .catch(error => { alert(error.statusText); });
            
            if ("Notification" in window) { Notification.requestPermission().then(function(permission) {
                if (permission === "granted") { new Notification("Registration Successful!\nYou can go to the main page"); }})}
            // отменяем стандартное поведение формы
            event.preventDefault();
        });
    };
          
    postform();
    </script>
</body>
</html>
